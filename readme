# Install Chocolately (como administrador)

$ Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
$ choco install -y nodejs --version=16.4.0
$ choco install -y git.install

# Instalar o PM2

$ npm i -g pm2

# Instalar o app de transferência

$ git clone https://github.com/camim-apps/egide-firebird.git .
$ npm install

# Criar o arquivo de configuração

> Replicar o arquivo .env.example para .env que está dentro da pasta atual e atualizar
> Replicar o arquivo .env.example para .env que está dentro da src/plugins/farmax e atualizar

# Criar o banco local

$ npm run db:migrate

# Extrair os dados

$ npm run extract

# Upload da primeira carga para o Égide

$ npm run upload

# Rodar o app

$ npm start

# Others
- Windows 7 e 10: 

> Criar um link para o start.bat e renomear para egide
> Ir no executar e digitar: shell:common startup
> Arrastar o arquivo egide para a pasta de inicialização

- Windows 7: 

> Verificar se o windows é 64 bits ou 32 bits 
> Abrir o browser do cliente, baixar e instalar os seguintes aplicativos:

>> 64 Bits
- Baixar os seguintes arquivos nos links:
>>>> https://nodejs.org/download/release/v13.14.0/node-v13.14.0-x64.msi
>>>> https://github.com/git-for-windows/git/releases/download/v2.37.2.windows.2/Git-2.37.2.2-64-bit.exe

>> 32 Bits
- Baixar os seguintes arquivos nos links:
>>>> https://nodejs.org/download/release/v13.14.0/node-v13.14.0-x86.msi
>>>> https://github.com/git-for-windows/git/releases/download/v2.37.2.windows.2/Git-2.37.2.2-32-bit.exe
